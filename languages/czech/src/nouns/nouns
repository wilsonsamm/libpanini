(for case (nominative accusative genitive dative 
           vocative prepositional instrumental)
(for gender (feminine masculine neuter)
(for animacy (-animate animate)
(for number (singular plural)

(df noun
	(flags .gender .case .animacy .number)
	(call nounstem .gender)
	(call case-ending .gender .case)
	(segments #)
	(rection (animacy .animacy) (gender .gender) (case .case)))

(df noun-learner
	(flags .gender .case .animacy .number)
	; Deduce either one, two or three syllables.
	(fork
		((call guess-syllable))
		((call guess-syllable) (call guess-syllable))
		((call guess-syllable) (call guess-syllable) (call guess-syllable)))
	(call case-ending .gender .case .number)
	(segments #)
	(rection (animacy .animacy) (gender .gender) (case .case))
	(makedef nounstem (flags .gender) (remove number)))))))

(df Learn
	(flags lemma)
	(call noun-learner nominative singular)
	(space))

(df noun (flags lemma feminine) (call noun feminine singular nominative))
(df noun (flags lemma neuter)   (call noun neuter   singular nominative))
(df noun (flags lemma masculine animate) (call noun masculine animate singular nominative))
(df noun (flags lemma masculine inanimate) (call noun masculine -animate singular nominative))

(df nounphrase
	(rection (person third))
	(call noun))
